create schema task_catalog;
create schema task_users; 


DROP TABLE IF EXISTS TASK_CATALOG.CURRENT_TASKS;
DROP TABLE IF EXISTS TASK_USERS.USERS;
DROP TABLE IF EXISTS TASK_CATALOG.TASK_INSTANCES;
DROP TABLE IF EXISTS task_catalog.CURRENT_TASKS;
DROP TABLE IF EXISTS TASK_CATALOG.TASKS;

CREATE TABLE TASK_USERS.USERS
(
    ID BIGINT IDENTITY(1, 1),
    USERNAME VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255), 
    CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
    LAST_UPDATED_AT DATETIME
    CONSTRAINT PK_USERS_ID PRIMARY KEY (ID)
);

create table TASK_CATALOG.TASKS
(
    EVENT_ID BIGINT IDENTITY(1, 1),
    CLASSIFYING_ID VARCHAR(255),

    USER_ID BIGINT,
    
    EVENT_NAME VARCHAR(255) NOT NULL,
    EVENT_TYPE VARCHAR(255) NOT NULL, 

    TASK_DETAILS TEXT,
    CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
    MOST_RECENT_TRIGGER DATETIME, 
    FIRST_OCCURANCE DATETIME,

    TIME_OF_DAY TIME,
    DAY_OF_MONTH INT,
    DAY_OF_WEEK INT,
    
    WEEKDAYS_ONLY TINYINT DEFAULT 0,
    MAX_CONCURRENT INTEGER DEFAULT 1,
    EVENT_PERSISTS INTEGER DEFAULT 1,

    AMOUNT DECIMAL,
    ACCOUNT VARCHAR(255),

    CONSTRAINT PK_TASKCATALOG_ID PRIMARY KEY (EVENT_ID),
    CONSTRAINT FK_TASKCATALOG_USERS FOREIGN KEY (USER_ID) REFERENCES TASK_USERS.USERS (ID)
)
;
-- CREATE UNIQUE INDEX task_catalog_tasks_id_uindex ON task_catalog.tasks (EVENT_ID);

CREATE TABLE task_catalog.TASK_INSTANCES
(
    ID BIGINT IDENTITY(1, 1),
    USER_ID BIGINT, 
    EVENT_ID BIGINT,
    STATUS VARCHAR(255),
    CREATED DATETIME default CURRENT_TIMESTAMP, 
    FINISHED_AT DATETIME,
    LAST_UPDATED_AT DATETIME,

    CONSTRAINT PK_TASKINSTANCE_ID PRIMARY KEY (ID),

    CONSTRAINT FK_TASKINSTANCE_USERS FOREIGN KEY (USER_ID) REFERENCES TASK_USERS.USERS (ID),
    CONSTRAINT FK_TASKINSTANCE_EVENTID FOREIGN KEY (EVENT_ID) REFERENCES TASK_CATALOG.TASKS (EVENT_ID)


);

-- CREATE UNIQUE INDEX task_catalog_task_instances_id_uindex ON task_catalog.task_instances (ID);
;

-- CREATE TABLE task_catalog.CURRENT_TASKS
-- (
--     ID BIGINT IDENTITY(1, 1),
--     TASK_ID BIGINT,
--     USER_ID
--     TASK_INSTANCE_ID BIGINT,
--     STATUS VARCHAR(255),
--     CREATED DATETIME default CURRENT_TIMESTAMP, 
--     FINISHED_AT DATETIME,
--     LAST_UPDATED_AT DATETIME,

--     CONSTRAINT FK_CURRENTTASKS_TASTKCATALOG FOREIGN KEY (TASK_ID)
--     REFERENCES task_catalog.TASKS (ID),

--     CONSTRAINT FK_CURRENTTASK_TASKINSTANCE FOREIGN KEY (TASK_INSTANCE_ID)
--     REFERENCES task_catalog.TASK_INSTANCES (ID)

-- );

